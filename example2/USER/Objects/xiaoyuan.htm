<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\xiaoyuan.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\xiaoyuan.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Wed Mar 29 22:23:54 2023
<BR><P>
<H3>Maximum Stack Usage =        284 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; MainLoop &rArr; ECAT_Main &rArr; MBX_Main &rArr; MailboxServiceInd &rArr; COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from gd32f4xx_it.o(i.BusFault_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[21]">CAN0_EWMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1f]">CAN0_RX0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[20]">CAN0_RX1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1e]">CAN0_TX_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4d]">CAN1_EWMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4b]">CAN1_RX0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4c]">CAN1_RX1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4a]">CAN1_TX_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[59]">DCI_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[16]">DMA0_Channel0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[17]">DMA0_Channel1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[18]">DMA0_Channel2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[19]">DMA0_Channel3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1c]">DMA0_Channel6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3a]">DMA0_Channel7_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[43]">DMA1_Channel0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[44]">DMA1_Channel1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[45]">DMA1_Channel2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[46]">DMA1_Channel3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[47]">DMA1_Channel4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4f]">DMA1_Channel5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[50]">DMA1_Channel6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[51]">DMA1_Channel7_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from gd32f4xx_it.o(i.DebugMon_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[48]">ENET_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[49]">ENET_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3b]">EXMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[33]">EXTI10_15_IRQHandler</a> from ecatport.o(i.EXTI10_15_IRQHandler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from ecatport.o(i.EXTI1_IRQHandler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from ecatport.o(i.EXTI3_IRQHandler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[22]">EXTI5_9_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[f]">FMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from gd32f4xx_it.o(i.HardFault_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2b]">I2C0_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2a]">I2C0_EV_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[54]">I2C2_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[53]">I2C2_EV_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[63]">IPA_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[c]">LVD_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from gd32f4xx_it.o(i.MemManage_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from gd32f4xx_it.o(i.NMI_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from gd32f4xx_it.o(i.PendSV_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[10]">RCU_CTC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[34]">RTC_Alarm_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[e]">RTC_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[0]">Read0x10F8</a> from coeappl.o(i.Read0x10F8) referenced 2 times from coeappl.o(.data)
 <LI><a href="#[1]">Reset_Handler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3c]">SDIO_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2e]">SPI0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3e]">SPI2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5e]">SPI3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5f]">SPI4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[60]">SPI5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from gd32f4xx_it.o(i.SVC_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from gd32f4xx_it.o(i.SysTick_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[65]">SystemInit</a> from system_gd32f4xx.o(i.SystemInit) referenced from startup_gd32f450_470.o(.text)
 <LI><a href="#[d]">TAMPER_STAMP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[23]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[26]">TIMER0_Channel_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[25]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[24]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[27]">TIMER1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[28]">TIMER2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[29]">TIMER3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3d]">TIMER4_IRQHandler</a> from ecatport.o(i.TIMER4_IRQHandler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[41]">TIMER5_DAC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[42]">TIMER6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[36]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[39]">TIMER7_Channel_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[38]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[37]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[62]">TLI_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[61]">TLI_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5a]">TRNG_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3f]">UART3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[40]">UART4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5c]">UART6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5d]">UART7_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[30]">USART0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[31]">USART1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[52]">USART5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4e]">USBFS_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[35]">USBFS_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[56]">USBHS_EP1_In_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[55]">USBHS_EP1_Out_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[58]">USBHS_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[57]">USBHS_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from gd32f4xx_it.o(i.UsageFault_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[b]">WWDGT_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[66]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f450_470.o(.text)
 <LI><a href="#[64]">main</a> from myapp.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[66]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[67]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[69]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[f6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[f7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[f8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[f9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[fa]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN1_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA0_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ENET_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>IPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TLI_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TLI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USBFS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USBFS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USBHS_EP1_In_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USBHS_EP1_Out_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USBHS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USBHS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ContinueInd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoRes
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0x10F8
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoUploadSegmentInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoDownloadSegmentInd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Write
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Read
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetDesc
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CopyToSendMailbox
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetDesc
</UL>

<P><STRONG><a name="[68]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[fc]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>AL_ControlInd</STRONG> (Thumb, 852 bytes, Stack size 40 bytes, ecatslv.o(i.AL_ControlInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = AL_ControlInd &rArr; StartInputHandler &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StartMailboxHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StopOutputHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StopMailboxHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StopInputHandler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StartOutputHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StartMailboxHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StartInputHandler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_GenerateMapping
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_AckErrorInd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEEPROMLoadedState
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopOutputHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopInputHandler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartOutputHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInputHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALStatus
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALEventMask
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSyncManChannel
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSmSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIfEcatError
</UL>

<P><STRONG><a name="[7f]"></a>AL_ControlRes</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, ecatslv.o(i.AL_ControlRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AL_ControlRes &rArr; MBX_StopMailboxHandler &rArr; DisableSyncManChannel &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StopOutputHandler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StopMailboxHandler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StopInputHandler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StartOutputHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StartMailboxHandler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_StartInputHandler
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopOutputHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopInputHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
</UL>

<P><STRONG><a name="[7b]"></a>APPL_AckErrorInd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, myapp.o(i.APPL_AckErrorInd))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[9c]"></a>APPL_Application</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, myapp.o(i.APPL_Application))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Application
</UL>

<P><STRONG><a name="[6b]"></a>APPL_GenerateMapping</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, myapp.o(i.APPL_GenerateMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APPL_GenerateMapping &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectHandle
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[d5]"></a>APPL_InputMapping</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, myapp.o(i.APPL_InputMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APPL_InputMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
</UL>

<P><STRONG><a name="[d6]"></a>APPL_OutputMapping</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, myapp.o(i.APPL_OutputMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APPL_OutputMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_OutputMapping
</UL>

<P><STRONG><a name="[73]"></a>APPL_StartInputHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, myapp.o(i.APPL_StartInputHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[6f]"></a>APPL_StartMailboxHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, myapp.o(i.APPL_StartMailboxHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[78]"></a>APPL_StartOutputHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, myapp.o(i.APPL_StartOutputHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[75]"></a>APPL_StopInputHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, myapp.o(i.APPL_StopInputHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[70]"></a>APPL_StopMailboxHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, myapp.o(i.APPL_StopMailboxHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[79]"></a>APPL_StopOutputHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, myapp.o(i.APPL_StopOutputHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[82]"></a>AddObjectsToObjDictionary</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, coeappl.o(i.AddObjectsToObjDictionary))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AddObjectsToObjDictionary &rArr; COE_AddObjectToDic
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_AddObjectToDic
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ObjDictionaryInit
</UL>

<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>COE_AddObjectToDic</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, coeappl.o(i.COE_AddObjectToDic))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = COE_AddObjectToDic
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddObjectsToObjDictionary
</UL>

<P><STRONG><a name="[87]"></a>COE_ClearObjDictionary</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, coeappl.o(i.COE_ClearObjDictionary))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = COE_ClearObjDictionary
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_RemoveDicEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ObjInit
</UL>

<P><STRONG><a name="[89]"></a>COE_ContinueInd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ecatcoe.o(i.COE_ContinueInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = COE_ContinueInd &rArr; SDOS_SdoInfoInd &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxReadInd
</UL>

<P><STRONG><a name="[ce]"></a>COE_GetObjectDictionary</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, coeappl.o(i.COE_GetObjectDictionary))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectList
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetNoOfObjects
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectHandle
</UL>

<P><STRONG><a name="[a2]"></a>COE_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ecatcoe.o(i.COE_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
</UL>

<P><STRONG><a name="[8e]"></a>COE_Main</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, coeappl.o(i.COE_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = COE_Main &rArr; SDOS_SdoRes &rArr; SdoRes &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoRes
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
</UL>

<P><STRONG><a name="[91]"></a>COE_ObjDictionaryInit</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, coeappl.o(i.COE_ObjDictionaryInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = COE_ObjDictionaryInit &rArr; AddObjectsToObjDictionary &rArr; COE_AddObjectToDic
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddObjectsToObjDictionary
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ObjInit
</UL>

<P><STRONG><a name="[92]"></a>COE_ObjInit</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, coeappl.o(i.COE_ObjInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = COE_ObjInit &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ObjDictionaryInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ClearObjDictionary
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainInit
</UL>

<P><STRONG><a name="[88]"></a>COE_RemoveDicEntry</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, coeappl.o(i.COE_RemoveDicEntry))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ClearObjDictionary
</UL>

<P><STRONG><a name="[94]"></a>COE_ServiceInd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ecatcoe.o(i.COE_ServiceInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MailboxServiceInd
</UL>

<P><STRONG><a name="[96]"></a>COE_SyncTimeStamp</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, coeappl.o(i.COE_SyncTimeStamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = COE_SyncTimeStamp &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read0x10F8
</UL>

<P><STRONG><a name="[d4]"></a>COE_UpdateSyncErrorStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, coeappl.o(i.COE_UpdateSyncErrorStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = COE_UpdateSyncErrorStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync0_Isr
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
</UL>

<P><STRONG><a name="[97]"></a>CheckIfEcatError</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ecatslv.o(i.CheckIfEcatError))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CheckIfEcatError &rArr; AL_ControlInd &rArr; StartInputHandler &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
</UL>

<P><STRONG><a name="[6c]"></a>CheckSmSettings</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, ecatslv.o(i.CheckSmSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CheckSmSettings &rArr; GetSyncMan &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSyncMan
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[d3]"></a>CheckSyncTypeValue</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, objdef.o(i.CheckSyncTypeValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckSyncTypeValue
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Write
</UL>

<P><STRONG><a name="[9f]"></a>DC_CheckWatchdog</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, ecatslv.o(i.DC_CheckWatchdog))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DC_CheckWatchdog
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_CheckTimer
</UL>

<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>DisableSyncManChannel</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ecatslv.o(i.DisableSyncManChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DisableSyncManChannel &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxRepeatReq
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopInputHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[9a]"></a>ECAT_Application</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ecatappl.o(i.ECAT_Application))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ECAT_Application &rArr; HandleCycleTimeMeasurement &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_Application
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleCycleTimeMeasurement
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync0_Isr
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
</UL>

<P><STRONG><a name="[9d]"></a>ECAT_CheckTimer</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ecatappl.o(i.ECAT_CheckTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ECAT_CheckTimer &rArr; ECAT_SetLedIndication
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DC_CheckWatchdog
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_SetLedIndication
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>ECAT_Init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, ecatslv.o(i.ECAT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ECAT_Init &rArr; MBX_Init &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEEPROMLoadedState
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALStatus
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetALEventMask
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainInit
</UL>

<P><STRONG><a name="[a4]"></a>ECAT_Main</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, ecatslv.o(i.ECAT_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = ECAT_Main &rArr; MBX_Main &rArr; MailboxServiceInd &rArr; COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Main
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxRepeatReq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxReadInd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
</UL>

<P><STRONG><a name="[9e]"></a>ECAT_SetLedIndication</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, ecatappl.o(i.ECAT_SetLedIndication))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ECAT_SetLedIndication
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_SetLed
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_CheckTimer
</UL>

<P><STRONG><a name="[33]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ecatport.o(i.EXTI10_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = EXTI10_15_IRQHandler &rArr; Sync0_Isr &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync0_Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ecatport.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EXTI1_IRQHandler &rArr; Sync1_Isr &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync1_Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ecatport.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EXTI3_IRQHandler &rArr; PDI_Isr &rArr; PDO_OutputMapping &rArr; HandleCycleTimeMeasurement &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>EnableSyncManChannel</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ecatslv.o(i.EnableSyncManChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EnableSyncManChannel &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StartMailboxHandler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxRepeatReq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInputHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[c1]"></a>GetOutOfMbxQueue</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mailbox.o(i.GetOutOfMbxQueue))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxReadInd
</UL>

<P><STRONG><a name="[98]"></a>GetSyncMan</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ecatslv.o(i.GetSyncMan))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetSyncMan &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StartMailboxHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInputHandler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSmSettings
</UL>

<P><STRONG><a name="[af]"></a>GetSystemTimeDelay</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ecatappl.o(i.GetSystemTimeDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_OutputMapping
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleCycleTimeMeasurement
</UL>

<P><STRONG><a name="[93]"></a>HW_EscRead</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ecatport.o(i.HW_EscRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingEsc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIfEcatError
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_SyncTimeStamp
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ObjInit
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CopyToSendMailbox
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEEPROMLoadedState
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInputHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALEventMask
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetALEventMask
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSyncMan
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSyncManChannel
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
</UL>

<P><STRONG><a name="[b0]"></a>HW_EscReadIsr</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ecatport.o(i.HW_EscReadIsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingEsc
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister_Isr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_OutputMapping
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemTimeDelay
</UL>

<P><STRONG><a name="[99]"></a>HW_EscWrite</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ecatport.o(i.HW_EscWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HW_EscWrite &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingEsc
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CopyToSendMailbox
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALStatus
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALEventMask
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetALEventMask
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSyncManChannel
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
</UL>

<P><STRONG><a name="[b2]"></a>HW_EscWriteIsr</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ecatport.o(i.HW_EscWriteIsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HW_EscWriteIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingEsc
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
</UL>

<P><STRONG><a name="[a6]"></a>HW_GetALEventRegister</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ecatport.o(i.HW_GetALEventRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HW_GetALEventRegister &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
</UL>

<P><STRONG><a name="[b3]"></a>HW_GetALEventRegister_Isr</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ecatport.o(i.HW_GetALEventRegister_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HW_GetALEventRegister_Isr &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync0_Isr
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
</UL>

<P><STRONG><a name="[b4]"></a>HW_Init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ecatport.o(i.HW_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HW_Init &rArr; bsp_spi3_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_timer_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync1_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync0_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_pdi_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_gpio_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTick_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_configuration
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>HW_Release</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ecatport.o(i.HW_Release))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>HW_SetLed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ecatport.o(i.HW_SetLed))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_SetLedIndication
</UL>

<P><STRONG><a name="[9b]"></a>HandleCycleTimeMeasurement</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ecatappl.o(i.HandleCycleTimeMeasurement))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HandleCycleTimeMeasurement &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemTimeDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_OutputMapping
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Application
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>MBX_CheckAndCopyMailbox</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, mailbox.o(i.MBX_CheckAndCopyMailbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MBX_CheckAndCopyMailbox &rArr; MBX_MailboxWriteInd &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxWriteInd
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Main
</UL>

<P><STRONG><a name="[c0]"></a>MBX_CopyToSendMailbox</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, mailbox.o(i.MBX_CopyToSendMailbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxRepeatReq
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxReadInd
</UL>

<P><STRONG><a name="[a1]"></a>MBX_Init</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, mailbox.o(i.MBX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MBX_Init &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
</UL>

<P><STRONG><a name="[a7]"></a>MBX_MailboxReadInd</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, mailbox.o(i.MBX_MailboxReadInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = MBX_MailboxReadInd &rArr; COE_ContinueInd &rArr; SDOS_SdoInfoInd &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ContinueInd
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CopyToSendMailbox
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOutOfMbxQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
</UL>

<P><STRONG><a name="[a8]"></a>MBX_MailboxRepeatReq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mailbox.o(i.MBX_MailboxRepeatReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MBX_MailboxRepeatReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CopyToSendMailbox
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSyncManChannel
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
</UL>

<P><STRONG><a name="[8a]"></a>MBX_MailboxSendReq</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, mailbox.o(i.MBX_MailboxSendReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutInMbxQueue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CopyToSendMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ContinueInd
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoRes
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxWriteInd
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Main
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
</UL>

<P><STRONG><a name="[bf]"></a>MBX_MailboxWriteInd</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, mailbox.o(i.MBX_MailboxWriteInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MBX_MailboxWriteInd &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutInMbxQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
</UL>

<P><STRONG><a name="[a5]"></a>MBX_Main</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, mailbox.o(i.MBX_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = MBX_Main &rArr; MailboxServiceInd &rArr; COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MailboxServiceInd
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOutOfMbxQueue
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
</UL>

<P><STRONG><a name="[6e]"></a>MBX_StartMailboxHandler</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, mailbox.o(i.MBX_StartMailboxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MBX_StartMailboxHandler &rArr; EnableSyncManChannel &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSyncMan
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSyncManChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[71]"></a>MBX_StopMailboxHandler</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, mailbox.o(i.MBX_StopMailboxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MBX_StopMailboxHandler &rArr; DisableSyncManChannel &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SODS_ClearPendingResponse
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOutOfMbxQueue
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[c3]"></a>MailboxServiceInd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mailbox.o(i.MailboxServiceInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = MailboxServiceInd &rArr; COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ServiceInd
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_Main
</UL>

<P><STRONG><a name="[c5]"></a>MainInit</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ecatappl.o(i.MainInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MainInit &rArr; ECAT_Init &rArr; MBX_Init &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ObjInit
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>MainLoop</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, ecatappl.o(i.MainLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = MainLoop &rArr; ECAT_Main &rArr; MBX_Main &rArr; MailboxServiceInd &rArr; COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Main
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIfEcatError
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_OutputMapping
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Application
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_SyncTimeStamp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_Main
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>OBJ_CopyNumberToString</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, objdef.o(i.OBJ_CopyNumberToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OBJ_CopyNumberToString
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetDesc
</UL>

<P><STRONG><a name="[ca]"></a>OBJ_GetDesc</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, objdef.o(i.OBJ_GetDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OBJ_GetDesc &rArr; OBJ_CopyNumberToString
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_CopyNumberToString
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
</UL>

<P><STRONG><a name="[cf]"></a>OBJ_GetEntryDesc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, objdef.o(i.OBJ_GetEntryDesc))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Write
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Read
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectList
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetNoOfObjects
</UL>

<P><STRONG><a name="[81]"></a>OBJ_GetEntryOffset</STRONG> (Thumb, 198 bytes, Stack size 20 bytes, objdef.o(i.OBJ_GetEntryOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OBJ_GetEntryOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Write
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Read
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_GenerateMapping
</UL>

<P><STRONG><a name="[cd]"></a>OBJ_GetNoOfObjects</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, objdef.o(i.OBJ_GetNoOfObjects))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OBJ_GetNoOfObjects
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_GetObjectDictionary
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
</UL>

<P><STRONG><a name="[dc]"></a>OBJ_GetObjDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, objdef.o(i.OBJ_GetObjDesc))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
</UL>

<P><STRONG><a name="[80]"></a>OBJ_GetObjectHandle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, objdef.o(i.OBJ_GetObjectHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OBJ_GetObjectHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_GetObjectDictionary
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_GenerateMapping
</UL>

<P><STRONG><a name="[d7]"></a>OBJ_GetObjectLength</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, objdef.o(i.OBJ_GetObjectLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OBJ_GetObjectLength
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
</UL>

<P><STRONG><a name="[d0]"></a>OBJ_GetObjectList</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, objdef.o(i.OBJ_GetObjectList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OBJ_GetObjectList
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_GetObjectDictionary
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInfoInd
</UL>

<P><STRONG><a name="[d1]"></a>OBJ_Read</STRONG> (Thumb, 826 bytes, Stack size 72 bytes, objdef.o(i.OBJ_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = OBJ_Read &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryDesc
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
</UL>

<P><STRONG><a name="[d2]"></a>OBJ_Write</STRONG> (Thumb, 936 bytes, Stack size 80 bytes, objdef.o(i.OBJ_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryDesc
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSyncTypeValue
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoDownloadSegmentInd
</UL>

<P><STRONG><a name="[ae]"></a>PDI_Isr</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ecatappl.o(i.PDI_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PDI_Isr &rArr; PDO_OutputMapping &rArr; HandleCycleTimeMeasurement &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister_Isr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_OutputMapping
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Application
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_UpdateSyncErrorStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>PDO_InputMapping</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ecatappl.o(i.PDO_InputMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister_Isr
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWriteIsr
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_InputMapping
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemTimeDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync1_Isr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sync0_Isr
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartInputHandler
</UL>

<P><STRONG><a name="[c7]"></a>PDO_OutputMapping</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ecatappl.o(i.PDO_OutputMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PDO_OutputMapping &rArr; HandleCycleTimeMeasurement &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APPL_OutputMapping
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleCycleTimeMeasurement
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemTimeDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDI_Isr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
</UL>

<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[c2]"></a>PutInMbxQueue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mailbox.o(i.PutInMbxQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PutInMbxQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxWriteInd
</UL>

<P><STRONG><a name="[0]"></a>Read0x10F8</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, coeappl.o(i.Read0x10F8))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Read0x10F8 &rArr; COE_SyncTimeStamp &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_SyncTimeStamp
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> coeappl.o(.data)
</UL>
<P><STRONG><a name="[a3]"></a>ResetALEventMask</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ecatslv.o(i.ResetALEventMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ResetALEventMask &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopInputHandler
</UL>

<P><STRONG><a name="[95]"></a>SDOS_SdoInd</STRONG> (Thumb, 724 bytes, Stack size 72 bytes, sdoserv.o(i.SDOS_SdoInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoRes
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoUploadSegmentInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoDownloadSegmentInd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Write
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Read
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectLength
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ServiceInd
</UL>

<P><STRONG><a name="[8d]"></a>SDOS_SdoInfoInd</STRONG> (Thumb, 584 bytes, Stack size 56 bytes, sdoserv.o(i.SDOS_SdoInfoInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SDOS_SdoInfoInd &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectList
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjDesc
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetNoOfObjects
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetEntryDesc
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetDesc
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_GetObjectHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ServiceInd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ContinueInd
</UL>

<P><STRONG><a name="[90]"></a>SDOS_SdoRes</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, sdoserv.o(i.SDOS_SdoRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SDOS_SdoRes &rArr; SdoRes &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoRes
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_Main
</UL>

<P><STRONG><a name="[c4]"></a>SODS_ClearPendingResponse</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, sdoserv.o(i.SODS_ClearPendingResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SODS_ClearPendingResponse &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
</UL>

<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[d9]"></a>SdoRes</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, sdoserv.o(i.SdoRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SdoRes &rArr; MBX_MailboxSendReq &rArr; MBX_CopyToSendMailbox &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxSendReq
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoRes
</UL>

<P><STRONG><a name="[74]"></a>SetALEventMask</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ecatslv.o(i.SetALEventMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SetALEventMask &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_disable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[7e]"></a>SetALStatus</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ecatslv.o(i.SetALStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SetALStatus &rArr; HW_EscWrite &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[72]"></a>StartInputHandler</STRONG> (Thumb, 970 bytes, Stack size 56 bytes, ecatslv.o(i.StartInputHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = StartInputHandler &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSyncMan
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableSyncManChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[77]"></a>StartOutputHandler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ecatslv.o(i.StartOutputHandler))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[76]"></a>StopInputHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, ecatslv.o(i.StopInputHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = StopInputHandler &rArr; ResetALEventMask &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetALEventMask
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableSyncManChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[7a]"></a>StopOutputHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ecatslv.o(i.StopOutputHandler))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlRes
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[ab]"></a>Sync0_Isr</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, ecatappl.o(i.Sync0_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Sync0_Isr &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister_Isr
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Application
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_UpdateSyncErrorStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>Sync1_Isr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ecatappl.o(i.Sync1_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Sync1_Isr &rArr; PDO_InputMapping &rArr; GetSystemTimeDelay &rArr; HW_EscReadIsr &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDO_InputMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SystemInit</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, system_gd32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_200m_25m_hxtal
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_200m_25m_hxtal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ecatport.o(i.TIMER4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIMER4_IRQHandler &rArr; ECAT_CheckTimer &rArr; ECAT_SetLedIndication
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_CheckTimer
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>TimingDelay_Decrement</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsp_systick.o(i.TimingDelay_Decrement))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[6d]"></a>UpdateEEPROMLoadedState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ecatslv.o(i.UpdateEEPROMLoadedState))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UpdateEEPROMLoadedState &rArr; HW_EscRead &rArr; AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ECAT_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AL_ControlInd
</UL>

<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[ff]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[100]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[101]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b8]"></a>bsp_spi3_init</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, bsp_spi.o(i.bsp_spi3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_spi3_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[e6]"></a>bsp_time4_init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_time.o(i.bsp_time4_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_time4_init &rArr; timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_timer_clock_prescaler_config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_timer_init
</UL>

<P><STRONG><a name="[be]"></a>delay_ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_systick.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[b7]"></a>ethercat_gpio_init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, md_ethercat.o(i.ethercat_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ethercat_gpio_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[b9]"></a>ethercat_pdi_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, md_ethercat.o(i.ethercat_pdi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ethercat_pdi_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[bb]"></a>ethercat_sync0_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, md_ethercat.o(i.ethercat_sync0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ethercat_sync0_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[bc]"></a>ethercat_sync1_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, md_ethercat.o(i.ethercat_sync1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ethercat_sync1_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[bd]"></a>ethercat_timer_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, md_ethercat.o(i.ethercat_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ethercat_timer_init &rArr; bsp_time4_init &rArr; timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[ed]"></a>exti_init</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, gd32f4xx_exti.o(i.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync1_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync0_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_pdi_init
</UL>

<P><STRONG><a name="[ac]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_exti.o(i.exti_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync1_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync0_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_pdi_init
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI10_15_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_Main
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoUploadSegmentInd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdoDownloadSegmentInd
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SODS_ClearPendingResponse
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxWriteInd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StopMailboxHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StartMailboxHandler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_MailboxReadInd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
</UL>

<P><STRONG><a name="[e3]"></a>gpio_af_set</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
</UL>

<P><STRONG><a name="[85]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister_Isr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_gpio_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingEsc
</UL>

<P><STRONG><a name="[b1]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister_Isr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_GetALEventRegister
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWriteIsr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>

<P><STRONG><a name="[e1]"></a>gpio_mode_set</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, gd32f4xx_gpio.o(i.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync1_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync0_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_pdi_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_gpio_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
</UL>

<P><STRONG><a name="[e2]"></a>gpio_output_options_set</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_gpio_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
</UL>

<P><STRONG><a name="[64]"></a>main</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, myapp.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = main &rArr; MainLoop &rArr; ECAT_Main &rArr; MBX_Main &rArr; MailboxServiceInd &rArr; COE_ServiceInd &rArr; SDOS_SdoInd &rArr; SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainInit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Release
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[8b]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COE_ContinueInd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_StartMailboxHandler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBX_CheckAndCopyMailbox
</UL>

<P><STRONG><a name="[b6]"></a>nvic_configuration</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bsp_sys.o(i.nvic_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_configuration &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[c8]"></a>nvic_irq_disable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f4xx_misc.o(i.nvic_irq_disable))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALEventMask
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetALEventMask
</UL>

<P><STRONG><a name="[ba]"></a>nvic_irq_enable</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, gd32f4xx_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainLoop
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_configuration
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetALEventMask
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetALEventMask
</UL>

<P><STRONG><a name="[ef]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_configuration
</UL>

<P><STRONG><a name="[e0]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync1_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync0_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_pdi_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_gpio_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>

<P><STRONG><a name="[f4]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[f3]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[e7]"></a>rcu_timer_clock_prescaler_config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_timer_clock_prescaler_config))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>

<P><STRONG><a name="[86]"></a>spi_data_rw</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, md_ethercat.o(i.spi_data_rw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWriteIsr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingEsc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>

<P><STRONG><a name="[e5]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
</UL>

<P><STRONG><a name="[f2]"></a>spi_i2s_data_receive</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_i2s_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
</UL>

<P><STRONG><a name="[f1]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
</UL>

<P><STRONG><a name="[f0]"></a>spi_i2s_flag_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
</UL>

<P><STRONG><a name="[e4]"></a>spi_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32f4xx_spi.o(i.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi3_init
</UL>

<P><STRONG><a name="[b5]"></a>sysTick_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_systick.o(i.sysTick_init))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_Init
</UL>

<P><STRONG><a name="[ec]"></a>syscfg_exti_line_config</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gd32f4xx_syscfg.o(i.syscfg_exti_line_config))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync1_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_sync0_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethercat_pdi_init
</UL>

<P><STRONG><a name="[e8]"></a>timer_deinit</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, gd32f4xx_timer.o(i.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>

<P><STRONG><a name="[eb]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>

<P><STRONG><a name="[e9]"></a>timer_init</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, gd32f4xx_timer.o(i.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>

<P><STRONG><a name="[ea]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time4_init
</UL>

<P><STRONG><a name="[df]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[de]"></a>system_clock_200m_25m_hxtal</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, system_gd32f4xx.o(i.system_clock_200m_25m_hxtal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_200m_25m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[da]"></a>SdoDownloadSegmentInd</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, sdoserv.o(i.SdoDownloadSegmentInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SdoDownloadSegmentInd &rArr; OBJ_Write &rArr; OBJ_GetEntryOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OBJ_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
</UL>

<P><STRONG><a name="[d8]"></a>SdoUploadSegmentInd</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, sdoserv.o(i.SdoUploadSegmentInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SdoUploadSegmentInd &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDOS_SdoInd
</UL>

<P><STRONG><a name="[84]"></a>AddressingEsc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ecatport.o(i.AddressingEsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AddressingEsc &rArr; spi_data_rw
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_data_rw
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWriteIsr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscReadIsr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscRead
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HW_EscWrite
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
